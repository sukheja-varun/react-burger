{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.scss","components/Burger/BuildControls/BuildControl/BuildControl.module.scss","components/Burger/Burger.module.scss","components/Burger/BuildControls/BuildControls.module.scss","components/Layout/Layout.module.scss","hoc/Aux.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","layout","Aux","burgerIngredient","ingredient","type","className","classes","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","dynamicIngredients","key","ingredients","hasOwnProperty","index","push","BurgerIngredient","length","Burger","buildControl","BuildControl","Label","label","Less","disabled","onClick","onRemoveClick","More","onAddClick","controls","buildControls","Classes","BuildControls","price","toFixed","map","ctrl","ingredientAdded","ingredientRemoved","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","totalPrice","onAddIngredient","setState","onRemoveIngredient","disabledInfo","this","Component","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.887f7a5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__31RCp\",\"BreadTop\":\"BurgerIngredient_BreadTop__3uZiA\",\"Seeds1\":\"BurgerIngredient_Seeds1__2bISE\",\"Seeds2\":\"BurgerIngredient_Seeds2__nxu_j\",\"Meat\":\"BurgerIngredient_Meat__3LLN1\",\"Cheese\":\"BurgerIngredient_Cheese__OiKGr\",\"Salad\":\"BurgerIngredient_Salad__wNpzg\",\"Bacon\":\"BurgerIngredient_Bacon__dxIXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2w8W6\",\"Label\":\"BuildControl_Label__14Z0p\",\"Less\":\"BuildControl_Less__2yb4l\",\"More\":\"BuildControl_More__2A_d3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1R9Jj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1lhFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__3nMgS\"};","// Note: we are not importing react here, because we are not using JSX here\nconst aux = props => props.children;\n\nexport default aux;\n","import React from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.module.scss';\n\nconst layout = props => (\n  <Aux>\n    {/* <div className={classes.content}>Toolbar, SideDrawer, Backdrop</div> */}\n    <main>{props.children}</main>\n  </Aux>\n);\n\nexport default layout;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredient.module.scss';\n\nconst burgerIngredient = props => {\n  let ingredient = null;\n  switch (props.type) {\n    case 'bread-bottom':\n      ingredient = <div className={classes.BreadBottom}></div>;\n      break;\n    case 'bread-top':\n      ingredient = (\n        <div className={classes.BreadTop}>\n          <div className={classes.Seeds1}></div>\n          <div className={classes.Seeds2}></div>\n        </div>\n      );\n      break;\n    case 'meat':\n      ingredient = <div className={classes.Meat}></div>;\n      break;\n    case 'cheese':\n      ingredient = <div className={classes.Cheese}></div>;\n      break;\n    case 'bacon':\n      ingredient = <div className={classes.Bacon}></div>;\n      break;\n    case 'salad':\n      ingredient = <div className={classes.Salad}></div>;\n      break;\n\n    default:\n      ingredient = null;\n      break;\n  }\n  return ingredient;\n};\n\nburgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default burgerIngredient;\n","import React from 'react';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nimport classes from './Burger.module.scss';\n\nconst burger = props => {\n  let dynamicIngredients = [];\n  for (const key in props.ingredients) {\n    if (props.ingredients.hasOwnProperty(key)) {\n      for (let index = 0; index < props.ingredients[key]; index++) {\n        dynamicIngredients.push(\n          <BurgerIngredient key={key + '-' + index} type={key} />\n        );\n      }\n    }\n  }\n  if (!dynamicIngredients.length) {\n    dynamicIngredients = <p>Please start adding ingredients!</p>;\n  }\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {dynamicIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default burger;\n","import React from 'react';\nimport { string, func, bool } from 'prop-types';\n\nimport classes from './BuildControl.module.scss';\n\nconst buildControl = props => (\n  <div className={classes.BuildControl}>\n    <div className={classes.Label}>{props.label}</div>\n    <button\n      className={classes.Less}\n      disabled={props.disabled}\n      onClick={props.onRemoveClick}\n    >\n      Less\n    </button>\n    <button className={classes.More} onClick={props.onAddClick}>\n      More\n    </button>\n  </div>\n);\n\nbuildControl.propTypes = {\n  label: string.isRequired,\n  disabled: bool.isRequired,\n  onAddClick: func.isRequired,\n  onRemoveClick: func.isRequired\n};\n\nexport default buildControl;\n","import React from 'react';\n\nimport Classes from './BuildControls.module.scss';\nimport BuildControl from './BuildControl/BuildControl';\nimport { func, object, number } from 'prop-types';\n\nconst controls = [\n  { label: 'Salad', type: 'salad' },\n  { label: 'Bacon', type: 'bacon' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Meat', type: 'meat' }\n];\n\nconst buildControls = props => (\n  <div className={Classes.BuildControls}>\n    <p>\n      Current Price: <strong>{props.price.toFixed(2)}</strong>\n    </p>\n    {controls.map(ctrl => (\n      <BuildControl\n        key={ctrl.label}\n        label={ctrl.label}\n        onAddClick={() => props.ingredientAdded(ctrl.type)}\n        onRemoveClick={() => props.ingredientRemoved(ctrl.type)}\n        disabled={props.disabled[ctrl.type]}\n      />\n    ))}\n  </div>\n);\n\nbuildControls.propTypes = {\n  price: number.isRequired,\n  disabled: object.isRequired,\n  ingredientAdded: func.isRequired,\n  ingredientRemoved: func.isRequired\n};\n\nexport default buildControls;\n","import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\nconst INGREDIENT_PRICES = {\n  salad: 20,\n  bacon: 30,\n  cheese: 20,\n  meat: 50\n};\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: 80\n  };\n\n  onAddIngredient = type => {\n    let ingredients = { ...this.state.ingredients };\n    ingredients[type]++;\n    const totalPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n    this.setState({ ingredients, totalPrice });\n  };\n\n  onRemoveIngredient = type => {\n    let ingredients = { ...this.state.ingredients };\n    if (ingredients[type] > 0) {\n      ingredients[type]--;\n      const totalPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n      this.setState({ ingredients, totalPrice });\n    }\n  };\n\n  render() {\n    const disabledInfo = {};\n    for (const key in this.state.ingredients) {\n      if (this.state.ingredients.hasOwnProperty(key)) {\n        disabledInfo[key] = this.state.ingredients[key] <= 0;\n      }\n    }\n\n    return (\n      <Aux>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls\n          price={this.state.totalPrice}\n          disabled={disabledInfo}\n          ingredientAdded={this.onAddIngredient}\n          ingredientRemoved={this.onRemoveIngredient}\n        />\n      </Aux>\n    );\n  }\n}\n\nexport default BurgerBuilder;\n","import React from 'react';\n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}